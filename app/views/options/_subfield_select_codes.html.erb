<% tag_params = @editor_profile.options_config[tag_name]["tag_params"] %>
<% label = params.has_key?("select_label") ? params['select_label'] : "Select" %>
<% codes_reference = params.include?("codes_reference") ? params["codes_reference"] : "codes"%>
<% show_error = (!tag_params[codes_reference].include?(marc_subfield.content) && marc_subfield.content) ? "" : "" %>

<%
if @editor_validation && @editor_validation.validate_subtag?(tag_name, subfield, @item)
	validate_class, unique_name = @editor_validation.get_subtag_class_name(tag_name, subfield)
	name_tag = raw "name=\"#{unique_name}\""
	validate_marker = "validating"
	validate_level = "warning" if @editor_validation.is_warning?(tag_name, subfield)
else
	validate_class = ""
end

  # Normally there is just one "codes" section with the codes
  # (which can also have a specific name from the parameter)
  code_values = tag_params[codes_reference]

  # If this item has templates (i.e. Source), adding the template
  # name to the codes will select specific codes for that template, ex
  # "codes" -> "codes_theoretica_edition_content" for a specific set
  # The set can be positive (add a new list) or negative (remove from
  # the existing list). It cannot be both at the same time. This is
  # handy if the difference is a couple items less than the default list.
  template_codes = "#{codes_reference}_#{@item.get_record_type.to_s}"
  if @item.respond_to?(:get_record_type) && tag_params.include?(template_codes)
	# if there is an array parameter "removed", subtract the items in this
	# array from the "default" items. This is the negative set
  	if tag_params[template_codes].include?("remove")
		code_values = code_values - tag_params[template_codes]["remove"]
	else
		# otherwise just substitute the list with the elements specified
		code_values = tag_params[template_codes]
	end
  end

%>

<% if params["unrestricted"] && !(params["unrestricted"] & current_user.roles.pluck(:name)).empty?
           restricted = ""
        else
           restricted = @restricted
        end %>

<select class="serialize_marc marc_editor_hotkey <%=validate_class%> <%=validate_marker%> <%=show_error%>" <%=name_tag%> data-tag="<%=tag_name%>" data-subfield="<%=subfield%>" width="100" <%=restricted %>>
	<option value="">--- <%= label %> ---</option>
	<% if !code_values.include?(marc_subfield.content) && marc_subfield.content %>
	<option value="<%= marc_subfield.content %>" selected><%= marc_subfield.content%></option>
	<% end %>
	<%- local_sorting(code_values, @editor_profile).each do |code| %>
    	<option value="<%= code -%>" <%= "selected" if marc_subfield.content == code %>><%= @editor_profile.get_label(code) -%></option>
	<%- end %>
</select>
